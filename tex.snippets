snippet beg "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet mb "Math" wA
\[
$1
.\] $0
endsnippet

snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet rd "^2" iA
\\sqrt{$1}$0
endsnippet

snippet qd "^2" iA
^2
endsnippet

snippet cb "^3" iA
^3
endsnippet

snippet lll "superscript" iA
^{$1}$0
endsnippet

snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
        if stripped[i] == ')': depth += 1
        if stripped[i] == '(': depth -= 1
        if depth == 0: break;
        i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

snippet ,in "Integral" iA
\\int_{$1}^{$2} $3 \,dt
endsnippet

snippet sieq "Sistema di equazioni" iA
\\begin{equation}
   \\begin{cases}
   $1\\\\
   \\end{cases}
\\end{equation}
$0
endsnippet

snippet perogni "Per ogni" iA
\\forall
endsnippet

snippet app "Per ogni" iA
\\in
endsnippet

snippet adr "reali" iA
\mathbb{R}
endsnippet

snippet >> "Maggiore uguale" iA
\\geq
endsnippet

snippet << "Minore uguale" iA
\\leq
endsnippet

snippet sex "Se x allora" iA
\\mbox{se x $1}$0
endsnippet

